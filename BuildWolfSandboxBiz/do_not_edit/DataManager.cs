//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
namespace BuildWolfSandboxBiz
{
	/// <summary>
	/// Main entry point into the database.
	/// 'Get' calls fetch data using the QueryCriteria object.
	/// 'New' calls create new objects/rows.
	/// The CommitAll() function will need to be called at the end.
	/// </summary>
	/// <example>
	/// Example of retrieving a contact and some of it's child rows from the database.
	/// <code>
	/// DataManager dm = new DataManager(Config.Dsn);
	/// dm.QueryCriteria.And(JoinPath.Contact.Teacher.Schedule.Columns.Duration,30,MatchType.GreaterOrEqual);
	/// Contact c = dm.GetContact(FetchPath.Contact.Teacher.All);
	/// </code>
	/// Example of an insert
	/// <code>
	/// DataManager dm = new DataManager(Config.Dsn);
	/// Contact c = dm.NewContact();
	/// dm.CommitAll();
	/// </code>
	/// Example of fetching a collection of rows
	/// <code>
	/// DataManager dm = new DataManager(Config.Dsn);
	/// ContactCollection c = dm.GetContactCollection(FetchPath.Contact.Teacher.All);
	/// </code>
	/// </example>
	public class DataManager : OrmLib.DataManagerBase
	{
		/// <summary>
		/// Constructor for dsn.
		/// </summary>
		public DataManager(string dsn) : base(dsn, BuildWolfSandboxBiz.OrmDataSet.NewDataSet()){}

		/// <summary>
		/// Constructor for connections.
		/// </summary>
		public DataManager(System.Data.SqlClient.SqlConnection connection) : base(connection, BuildWolfSandboxBiz.OrmDataSet.NewDataSet()){}
		
		/// <summary>
		/// Constructor for transactions.
		/// </summary>
		public DataManager(System.Data.SqlClient.SqlTransaction transaction) : base(transaction, BuildWolfSandboxBiz.OrmDataSet.NewDataSet()){}
		
		/// <summary>
		/// Lookup object for static tables
		/// </summary>
		/// <remarks>
		/// This is an internal field and should not be used.
		/// </remarks>
		internal BuildWolfSandboxBiz.Lookups lookups;
		
		/// <summary>
		/// Fetches the lookup object
		/// TODO: refresh the lookup object
		/// </summary>
		/// <remarks>
		/// This is an internal method and should not be used.
		/// </remarks>
		/// <returns></returns>
		internal BuildWolfSandboxBiz.Lookups GetLookups()
		{
			if (lookups == null)
			{
				lookups = new BuildWolfSandboxBiz.Lookups(this.Dsn);
			}
			return lookups;
		}


		/// <summary>
		/// Creates a new Builds.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new Builds object</returns>
		public BuildWolfSandboxBiz.Builds NewBuilds(System.Int32 id,
			System.Data.SqlTypes.SqlDateTime CreationDate,
			System.String CreatedByComputerName,
			System.String CreatorsLocalBranchRoot,
			BuildWolfSandboxBiz.BuildStatus parentBuildStatus,
			BuildWolfSandboxBiz.Users parentUsers)
		{
			System.Data.DataRow dr = DataSet.Tables["Builds"].NewRow();
			DataSet.Tables["Builds"].Rows.Add( dr );
			BuildWolfSandboxBiz.Builds _Builds = new BuildWolfSandboxBiz.Builds(this, dr);
			
			_Builds.id = id;
			_Builds.CreationDate = CreationDate;
			_Builds.CreatedByComputerName = CreatedByComputerName;
			_Builds.CreatorsLocalBranchRoot = CreatorsLocalBranchRoot;
			_Builds.BuildStatus = parentBuildStatus;
			_Builds.Users = parentUsers;
						
			return _Builds;
		}

		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Builds based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A Builds, or null if not found</returns>
		public BuildWolfSandboxBiz.Builds  GetBuilds(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("Builds", relations), ds, false);

			System.Data.DataRow BuildsRow = GetRow(ds, "Builds");

			if ( BuildsRow == null ) return null;
			return new BuildWolfSandboxBiz.Builds (this,  BuildsRow);
		}		
		
		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Builds from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["Buildsid"] = _Builds.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Builds = dm.GetContactFromDataSet((System.Int32)Session["Buildsid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A Builds, or null if not found</returns>
		public BuildWolfSandboxBiz.Builds GetBuildsFromDataSet(System.Int32 id)
		{
			System.Data.DataRow BuildsRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["Builds"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					BuildsRow = dr;
					break;
				}
			}
			
			if ( BuildsRow == null) return null;
			return new BuildWolfSandboxBiz.Builds (this, BuildsRow);
		}
		/// <summary>
		/// Gets multiple Buildss based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of Builds objects</returns>
		public BuildWolfSandboxBiz.BuildsCollection GetBuildsCollection()
		{
			return GetBuildsCollection(FetchPath.Builds);
		}
		/// <summary>
		/// Gets multiple Buildss based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of Builds objects</returns>
		public BuildWolfSandboxBiz.BuildsCollection GetBuildsCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("Builds", relations), ds, false);
			
			System.Data.DataRow[] BuildsList = GetRows(ds,"Builds");

			if ( BuildsList == null ) return null;

			BuildWolfSandboxBiz.BuildsCollection a = new BuildWolfSandboxBiz.BuildsCollection();
			
			foreach ( System.Data.DataRow dr in BuildsList )
				a.Add(new BuildWolfSandboxBiz.Builds( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of Builds from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all Builds loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["BuildsID"] = _Builds.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Builds = dm.GetContactFromDataSet((int)Session["BuildsID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of Builds objects.</returns>
		public BuildWolfSandboxBiz.BuildsCollection GetBuildsCollectionFromDataSet()
		{
			System.Data.DataRow[] BuildsList = GetRows(DataSet, "Builds");
			BuildWolfSandboxBiz.BuildsCollection a = new BuildWolfSandboxBiz.BuildsCollection();
			
			foreach(System.Data.DataRow dr in BuildsList )
				a.Add( new BuildWolfSandboxBiz.Builds(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new BuildStatus.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new BuildStatus object</returns>
		public BuildWolfSandboxBiz.BuildStatus NewBuildStatus(System.Int32 id,
			System.String StatusName)
		{
			System.Data.DataRow dr = DataSet.Tables["BuildStatus"].NewRow();
			DataSet.Tables["BuildStatus"].Rows.Add( dr );
			BuildWolfSandboxBiz.BuildStatus _BuildStatus = new BuildWolfSandboxBiz.BuildStatus(this, dr);
			
			_BuildStatus.id = id;
			_BuildStatus.StatusName = StatusName;
						
			return _BuildStatus;
		}

		/// <summary>
		/// Gets a BuildWolfSandboxBiz.BuildStatus based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A BuildStatus, or null if not found</returns>
		public BuildWolfSandboxBiz.BuildStatus  GetBuildStatus(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("BuildStatus", relations), ds, false);

			System.Data.DataRow BuildStatusRow = GetRow(ds, "BuildStatus");

			if ( BuildStatusRow == null ) return null;
			return new BuildWolfSandboxBiz.BuildStatus (this,  BuildStatusRow);
		}		
		
		/// <summary>
		/// Gets a BuildWolfSandboxBiz.BuildStatus from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["BuildStatusid"] = _BuildStatus.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _BuildStatus = dm.GetContactFromDataSet((System.Int32)Session["BuildStatusid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A BuildStatus, or null if not found</returns>
		public BuildWolfSandboxBiz.BuildStatus GetBuildStatusFromDataSet(System.Int32 id)
		{
			System.Data.DataRow BuildStatusRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["BuildStatus"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					BuildStatusRow = dr;
					break;
				}
			}
			
			if ( BuildStatusRow == null) return null;
			return new BuildWolfSandboxBiz.BuildStatus (this, BuildStatusRow);
		}
		/// <summary>
		/// Gets multiple BuildStatuss based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of BuildStatus objects</returns>
		public BuildWolfSandboxBiz.BuildStatusCollection GetBuildStatusCollection()
		{
			return GetBuildStatusCollection(FetchPath.BuildStatus);
		}
		/// <summary>
		/// Gets multiple BuildStatuss based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of BuildStatus objects</returns>
		public BuildWolfSandboxBiz.BuildStatusCollection GetBuildStatusCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("BuildStatus", relations), ds, false);
			
			System.Data.DataRow[] BuildStatusList = GetRows(ds,"BuildStatus");

			if ( BuildStatusList == null ) return null;

			BuildWolfSandboxBiz.BuildStatusCollection a = new BuildWolfSandboxBiz.BuildStatusCollection();
			
			foreach ( System.Data.DataRow dr in BuildStatusList )
				a.Add(new BuildWolfSandboxBiz.BuildStatus( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of BuildStatus from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all BuildStatus loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["BuildStatusID"] = _BuildStatus.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _BuildStatus = dm.GetContactFromDataSet((int)Session["BuildStatusID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of BuildStatus objects.</returns>
		public BuildWolfSandboxBiz.BuildStatusCollection GetBuildStatusCollectionFromDataSet()
		{
			System.Data.DataRow[] BuildStatusList = GetRows(DataSet, "BuildStatus");
			BuildWolfSandboxBiz.BuildStatusCollection a = new BuildWolfSandboxBiz.BuildStatusCollection();
			
			foreach(System.Data.DataRow dr in BuildStatusList )
				a.Add( new BuildWolfSandboxBiz.BuildStatus(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new Comments.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new Comments object</returns>
		public BuildWolfSandboxBiz.Comments NewComments(System.Int32 id,
			System.Data.SqlTypes.SqlDateTime CommentTime)
		{
			System.Data.DataRow dr = DataSet.Tables["Comments"].NewRow();
			DataSet.Tables["Comments"].Rows.Add( dr );
			BuildWolfSandboxBiz.Comments _Comments = new BuildWolfSandboxBiz.Comments(this, dr);
			
			_Comments.id = id;
			_Comments.CommentTime = CommentTime;
						
			return _Comments;
		}

		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Comments based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A Comments, or null if not found</returns>
		public BuildWolfSandboxBiz.Comments  GetComments(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("Comments", relations), ds, false);

			System.Data.DataRow CommentsRow = GetRow(ds, "Comments");

			if ( CommentsRow == null ) return null;
			return new BuildWolfSandboxBiz.Comments (this,  CommentsRow);
		}		
		
		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Comments from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["Commentsid"] = _Comments.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Comments = dm.GetContactFromDataSet((System.Int32)Session["Commentsid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A Comments, or null if not found</returns>
		public BuildWolfSandboxBiz.Comments GetCommentsFromDataSet(System.Int32 id)
		{
			System.Data.DataRow CommentsRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["Comments"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					CommentsRow = dr;
					break;
				}
			}
			
			if ( CommentsRow == null) return null;
			return new BuildWolfSandboxBiz.Comments (this, CommentsRow);
		}
		/// <summary>
		/// Gets multiple Commentss based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of Comments objects</returns>
		public BuildWolfSandboxBiz.CommentsCollection GetCommentsCollection()
		{
			return GetCommentsCollection(FetchPath.Comments);
		}
		/// <summary>
		/// Gets multiple Commentss based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of Comments objects</returns>
		public BuildWolfSandboxBiz.CommentsCollection GetCommentsCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("Comments", relations), ds, false);
			
			System.Data.DataRow[] CommentsList = GetRows(ds,"Comments");

			if ( CommentsList == null ) return null;

			BuildWolfSandboxBiz.CommentsCollection a = new BuildWolfSandboxBiz.CommentsCollection();
			
			foreach ( System.Data.DataRow dr in CommentsList )
				a.Add(new BuildWolfSandboxBiz.Comments( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of Comments from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all Comments loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["CommentsID"] = _Comments.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Comments = dm.GetContactFromDataSet((int)Session["CommentsID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of Comments objects.</returns>
		public BuildWolfSandboxBiz.CommentsCollection GetCommentsCollectionFromDataSet()
		{
			System.Data.DataRow[] CommentsList = GetRows(DataSet, "Comments");
			BuildWolfSandboxBiz.CommentsCollection a = new BuildWolfSandboxBiz.CommentsCollection();
			
			foreach(System.Data.DataRow dr in CommentsList )
				a.Add( new BuildWolfSandboxBiz.Comments(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new Groups.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new Groups object</returns>
		public BuildWolfSandboxBiz.Groups NewGroups(System.Int32 id,
			System.String GroupName)
		{
			System.Data.DataRow dr = DataSet.Tables["Groups"].NewRow();
			DataSet.Tables["Groups"].Rows.Add( dr );
			BuildWolfSandboxBiz.Groups _Groups = new BuildWolfSandboxBiz.Groups(this, dr);
			
			_Groups.id = id;
			_Groups.GroupName = GroupName;
						
			return _Groups;
		}

		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Groups based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A Groups, or null if not found</returns>
		public BuildWolfSandboxBiz.Groups  GetGroups(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("Groups", relations), ds, false);

			System.Data.DataRow GroupsRow = GetRow(ds, "Groups");

			if ( GroupsRow == null ) return null;
			return new BuildWolfSandboxBiz.Groups (this,  GroupsRow);
		}		
		
		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Groups from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["Groupsid"] = _Groups.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Groups = dm.GetContactFromDataSet((System.Int32)Session["Groupsid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A Groups, or null if not found</returns>
		public BuildWolfSandboxBiz.Groups GetGroupsFromDataSet(System.Int32 id)
		{
			System.Data.DataRow GroupsRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["Groups"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					GroupsRow = dr;
					break;
				}
			}
			
			if ( GroupsRow == null) return null;
			return new BuildWolfSandboxBiz.Groups (this, GroupsRow);
		}
		/// <summary>
		/// Gets multiple Groupss based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of Groups objects</returns>
		public BuildWolfSandboxBiz.GroupsCollection GetGroupsCollection()
		{
			return GetGroupsCollection(FetchPath.Groups);
		}
		/// <summary>
		/// Gets multiple Groupss based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of Groups objects</returns>
		public BuildWolfSandboxBiz.GroupsCollection GetGroupsCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("Groups", relations), ds, false);
			
			System.Data.DataRow[] GroupsList = GetRows(ds,"Groups");

			if ( GroupsList == null ) return null;

			BuildWolfSandboxBiz.GroupsCollection a = new BuildWolfSandboxBiz.GroupsCollection();
			
			foreach ( System.Data.DataRow dr in GroupsList )
				a.Add(new BuildWolfSandboxBiz.Groups( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of Groups from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all Groups loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["GroupsID"] = _Groups.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Groups = dm.GetContactFromDataSet((int)Session["GroupsID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of Groups objects.</returns>
		public BuildWolfSandboxBiz.GroupsCollection GetGroupsCollectionFromDataSet()
		{
			System.Data.DataRow[] GroupsList = GetRows(DataSet, "Groups");
			BuildWolfSandboxBiz.GroupsCollection a = new BuildWolfSandboxBiz.GroupsCollection();
			
			foreach(System.Data.DataRow dr in GroupsList )
				a.Add( new BuildWolfSandboxBiz.Groups(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new Platforms.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new Platforms object</returns>
		public BuildWolfSandboxBiz.Platforms NewPlatforms(System.Int32 id)
		{
			System.Data.DataRow dr = DataSet.Tables["Platforms"].NewRow();
			DataSet.Tables["Platforms"].Rows.Add( dr );
			BuildWolfSandboxBiz.Platforms _Platforms = new BuildWolfSandboxBiz.Platforms(this, dr);
			
			_Platforms.id = id;
						
			return _Platforms;
		}

		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Platforms based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A Platforms, or null if not found</returns>
		public BuildWolfSandboxBiz.Platforms  GetPlatforms(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("Platforms", relations), ds, false);

			System.Data.DataRow PlatformsRow = GetRow(ds, "Platforms");

			if ( PlatformsRow == null ) return null;
			return new BuildWolfSandboxBiz.Platforms (this,  PlatformsRow);
		}		
		
		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Platforms from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["Platformsid"] = _Platforms.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Platforms = dm.GetContactFromDataSet((System.Int32)Session["Platformsid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A Platforms, or null if not found</returns>
		public BuildWolfSandboxBiz.Platforms GetPlatformsFromDataSet(System.Int32 id)
		{
			System.Data.DataRow PlatformsRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["Platforms"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					PlatformsRow = dr;
					break;
				}
			}
			
			if ( PlatformsRow == null) return null;
			return new BuildWolfSandboxBiz.Platforms (this, PlatformsRow);
		}
		/// <summary>
		/// Gets multiple Platformss based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of Platforms objects</returns>
		public BuildWolfSandboxBiz.PlatformsCollection GetPlatformsCollection()
		{
			return GetPlatformsCollection(FetchPath.Platforms);
		}
		/// <summary>
		/// Gets multiple Platformss based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of Platforms objects</returns>
		public BuildWolfSandboxBiz.PlatformsCollection GetPlatformsCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("Platforms", relations), ds, false);
			
			System.Data.DataRow[] PlatformsList = GetRows(ds,"Platforms");

			if ( PlatformsList == null ) return null;

			BuildWolfSandboxBiz.PlatformsCollection a = new BuildWolfSandboxBiz.PlatformsCollection();
			
			foreach ( System.Data.DataRow dr in PlatformsList )
				a.Add(new BuildWolfSandboxBiz.Platforms( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of Platforms from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all Platforms loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["PlatformsID"] = _Platforms.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Platforms = dm.GetContactFromDataSet((int)Session["PlatformsID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of Platforms objects.</returns>
		public BuildWolfSandboxBiz.PlatformsCollection GetPlatformsCollectionFromDataSet()
		{
			System.Data.DataRow[] PlatformsList = GetRows(DataSet, "Platforms");
			BuildWolfSandboxBiz.PlatformsCollection a = new BuildWolfSandboxBiz.PlatformsCollection();
			
			foreach(System.Data.DataRow dr in PlatformsList )
				a.Add( new BuildWolfSandboxBiz.Platforms(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new sysdiagrams.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new sysdiagrams object</returns>
		public BuildWolfSandboxBiz.sysdiagrams Newsysdiagrams(System.String name,
			System.Data.SqlTypes.SqlInt32 principal_id,
			System.Int32 diagram_id)
		{
			System.Data.DataRow dr = DataSet.Tables["sysdiagrams"].NewRow();
			DataSet.Tables["sysdiagrams"].Rows.Add( dr );
			BuildWolfSandboxBiz.sysdiagrams _sysdiagrams = new BuildWolfSandboxBiz.sysdiagrams(this, dr);
			
			_sysdiagrams.name = name;
			_sysdiagrams.principal_id = principal_id;
			_sysdiagrams.diagram_id = diagram_id;
						
			return _sysdiagrams;
		}

		/// <summary>
		/// Gets a BuildWolfSandboxBiz.sysdiagrams based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A sysdiagrams, or null if not found</returns>
		public BuildWolfSandboxBiz.sysdiagrams  Getsysdiagrams(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("sysdiagrams", relations), ds, false);

			System.Data.DataRow sysdiagramsRow = GetRow(ds, "sysdiagrams");

			if ( sysdiagramsRow == null ) return null;
			return new BuildWolfSandboxBiz.sysdiagrams (this,  sysdiagramsRow);
		}		
		
		/// <summary>
		/// Gets a BuildWolfSandboxBiz.sysdiagrams from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["sysdiagramsdiagram_id"] = _sysdiagrams.diagram_id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _sysdiagrams = dm.GetContactFromDataSet((System.Int32)Session["sysdiagramsdiagram_id"]);
		/// </code>
		/// </example>
		/// <param name="diagram_id">Primary key of the data row to retrieve.</param>
		/// <returns>A sysdiagrams, or null if not found</returns>
		public BuildWolfSandboxBiz.sysdiagrams GetsysdiagramsFromDataSet(System.Int32 diagram_id)
		{
			System.Data.DataRow sysdiagramsRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["sysdiagrams"].Rows)
			{
				if ( ((System.Int32)dr["diagram_id"]).ToString() == diagram_id.ToString() ) 
				{
					sysdiagramsRow = dr;
					break;
				}
			}
			
			if ( sysdiagramsRow == null) return null;
			return new BuildWolfSandboxBiz.sysdiagrams (this, sysdiagramsRow);
		}
		/// <summary>
		/// Gets multiple sysdiagramss based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of sysdiagrams objects</returns>
		public BuildWolfSandboxBiz.sysdiagramsCollection GetsysdiagramsCollection()
		{
			return GetsysdiagramsCollection(FetchPath.sysdiagrams);
		}
		/// <summary>
		/// Gets multiple sysdiagramss based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of sysdiagrams objects</returns>
		public BuildWolfSandboxBiz.sysdiagramsCollection GetsysdiagramsCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("sysdiagrams", relations), ds, false);
			
			System.Data.DataRow[] sysdiagramsList = GetRows(ds,"sysdiagrams");

			if ( sysdiagramsList == null ) return null;

			BuildWolfSandboxBiz.sysdiagramsCollection a = new BuildWolfSandboxBiz.sysdiagramsCollection();
			
			foreach ( System.Data.DataRow dr in sysdiagramsList )
				a.Add(new BuildWolfSandboxBiz.sysdiagrams( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of sysdiagrams from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all sysdiagrams loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["sysdiagramsID"] = _sysdiagrams.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _sysdiagrams = dm.GetContactFromDataSet((int)Session["sysdiagramsID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of sysdiagrams objects.</returns>
		public BuildWolfSandboxBiz.sysdiagramsCollection GetsysdiagramsCollectionFromDataSet()
		{
			System.Data.DataRow[] sysdiagramsList = GetRows(DataSet, "sysdiagrams");
			BuildWolfSandboxBiz.sysdiagramsCollection a = new BuildWolfSandboxBiz.sysdiagramsCollection();
			
			foreach(System.Data.DataRow dr in sysdiagramsList )
				a.Add( new BuildWolfSandboxBiz.sysdiagrams(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new Tags.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new Tags object</returns>
		public BuildWolfSandboxBiz.Tags NewTags(System.String id,
			System.String TagName)
		{
			System.Data.DataRow dr = DataSet.Tables["Tags"].NewRow();
			DataSet.Tables["Tags"].Rows.Add( dr );
			BuildWolfSandboxBiz.Tags _Tags = new BuildWolfSandboxBiz.Tags(this, dr);
			
			_Tags.id = id;
			_Tags.TagName = TagName;
						
			return _Tags;
		}

		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Tags based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A Tags, or null if not found</returns>
		public BuildWolfSandboxBiz.Tags  GetTags(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("Tags", relations), ds, false);

			System.Data.DataRow TagsRow = GetRow(ds, "Tags");

			if ( TagsRow == null ) return null;
			return new BuildWolfSandboxBiz.Tags (this,  TagsRow);
		}		
		
		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Tags from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["Tagsid"] = _Tags.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Tags = dm.GetContactFromDataSet((System.String)Session["Tagsid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A Tags, or null if not found</returns>
		public BuildWolfSandboxBiz.Tags GetTagsFromDataSet(System.String id)
		{
			System.Data.DataRow TagsRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["Tags"].Rows)
			{
				if ( ((System.String)dr["id"]).ToString() == id.ToString() ) 
				{
					TagsRow = dr;
					break;
				}
			}
			
			if ( TagsRow == null) return null;
			return new BuildWolfSandboxBiz.Tags (this, TagsRow);
		}
		/// <summary>
		/// Gets multiple Tagss based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of Tags objects</returns>
		public BuildWolfSandboxBiz.TagsCollection GetTagsCollection()
		{
			return GetTagsCollection(FetchPath.Tags);
		}
		/// <summary>
		/// Gets multiple Tagss based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of Tags objects</returns>
		public BuildWolfSandboxBiz.TagsCollection GetTagsCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("Tags", relations), ds, false);
			
			System.Data.DataRow[] TagsList = GetRows(ds,"Tags");

			if ( TagsList == null ) return null;

			BuildWolfSandboxBiz.TagsCollection a = new BuildWolfSandboxBiz.TagsCollection();
			
			foreach ( System.Data.DataRow dr in TagsList )
				a.Add(new BuildWolfSandboxBiz.Tags( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of Tags from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all Tags loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["TagsID"] = _Tags.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Tags = dm.GetContactFromDataSet((int)Session["TagsID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of Tags objects.</returns>
		public BuildWolfSandboxBiz.TagsCollection GetTagsCollectionFromDataSet()
		{
			System.Data.DataRow[] TagsList = GetRows(DataSet, "Tags");
			BuildWolfSandboxBiz.TagsCollection a = new BuildWolfSandboxBiz.TagsCollection();
			
			foreach(System.Data.DataRow dr in TagsList )
				a.Add( new BuildWolfSandboxBiz.Tags(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}

		/// <summary>
		/// Creates a new Users.
		/// </summary>
		/// <remarks>
		/// <see cref="OrmLib.DataManagerBase.CommitAll"/> to have this written to the database.
		/// </remarks>
		/// <returns>A new Users object</returns>
		public BuildWolfSandboxBiz.Users NewUsers(System.Int32 id,
			System.String WindowsLoginName)
		{
			System.Data.DataRow dr = DataSet.Tables["Users"].NewRow();
			DataSet.Tables["Users"].Rows.Add( dr );
			BuildWolfSandboxBiz.Users _Users = new BuildWolfSandboxBiz.Users(this, dr);
			
			_Users.id = id;
			_Users.WindowsLoginName = WindowsLoginName;
						
			return _Users;
		}

		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Users based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A Users, or null if not found</returns>
		public BuildWolfSandboxBiz.Users  GetUsers(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet( CreateSql("Users", relations), ds, false);

			System.Data.DataRow UsersRow = GetRow(ds, "Users");

			if ( UsersRow == null ) return null;
			return new BuildWolfSandboxBiz.Users (this,  UsersRow);
		}		
		
		/// <summary>
		/// Gets a BuildWolfSandboxBiz.Users from the already loaded records in this DataManager, by primary key.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["Usersid"] = _Users.id;
		/// 
		/// /* second web page - need to get currend contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Users = dm.GetContactFromDataSet((System.Int32)Session["Usersid"]);
		/// </code>
		/// </example>
		/// <param name="id">Primary key of the data row to retrieve.</param>
		/// <returns>A Users, or null if not found</returns>
		public BuildWolfSandboxBiz.Users GetUsersFromDataSet(System.Int32 id)
		{
			System.Data.DataRow UsersRow = null;
			
			foreach(System.Data.DataRow dr in DataSet.Tables["Users"].Rows)
			{
				if ( ((System.Int32)dr["id"]).ToString() == id.ToString() ) 
				{
					UsersRow = dr;
					break;
				}
			}
			
			if ( UsersRow == null) return null;
			return new BuildWolfSandboxBiz.Users (this, UsersRow);
		}
		/// <summary>
		/// Gets multiple Userss based on the criteria specified by QueryCriteria.And(..).
		/// </summary>
		/// <returns>A collection of Users objects</returns>
		public BuildWolfSandboxBiz.UsersCollection GetUsersCollection()
		{
			return GetUsersCollection(FetchPath.Users);
		}
		/// <summary>
		/// Gets multiple Userss based on the criteria specified by AddCriteria(..).
		/// </summary>
		/// <param name="relations">Specify which related tables should be fetched during this query</param>
		/// <returns>A collection of Users objects</returns>
		public BuildWolfSandboxBiz.UsersCollection GetUsersCollection(params OrmLib.DataManagerBase.FetchPathRelation[] relations)
		{
			System.Data.DataSet ds = OrmDataSet.NewDataSet();
			FillDataSet(CreateSql("Users", relations), ds, false);
			
			System.Data.DataRow[] UsersList = GetRows(ds,"Users");

			if ( UsersList == null ) return null;

			BuildWolfSandboxBiz.UsersCollection a = new BuildWolfSandboxBiz.UsersCollection();
			
			foreach ( System.Data.DataRow dr in UsersList )
				a.Add(new BuildWolfSandboxBiz.Users( this, dr ));
			
			// must be added afterwards
			a.DataManager = this;
			
			return a;
		}
		
		/// <summary>
		/// Gets a collection of Users from the already loaded records in this DataManager instance.
		/// </summary>
		/// <remarks>
		/// This method is made available for when the dataset has been serialized 
		/// from session state or disk. This method will return all Users loaded.
		/// </remarks>
		/// <example>
		/// This example shows a reason to use this method.
		/// <code>
		/// /* first web page - save dataset and primary keys */
		/// Session["DataSet"] = dm.DataSet;
		/// Session["UsersID"] = _Users.ID;
		/// 
		/// /* second web page - need to get current contact */
		/// DataManager dm = new DataManager(Config.Dsn);
		/// dm.DataSet = (DataSet)Session["DataSet"];
		/// _Users = dm.GetContactFromDataSet((int)Session["UsersID"]);
		/// </code>
		/// </example>
		/// <returns>A collection of Users objects.</returns>
		public BuildWolfSandboxBiz.UsersCollection GetUsersCollectionFromDataSet()
		{
			System.Data.DataRow[] UsersList = GetRows(DataSet, "Users");
			BuildWolfSandboxBiz.UsersCollection a = new BuildWolfSandboxBiz.UsersCollection();
			
			foreach(System.Data.DataRow dr in UsersList )
				a.Add( new BuildWolfSandboxBiz.Users(this, dr));
			
			// must be added afterwards
			a.DataManager = this;
	
			return a;
		}


	}
}
